In this video, we will listen
to several data professionals talk about how data
engineering has evolved over the past couple of decades. Compared to two decades back,
the data engineering ecospace, or landscape, is a
totally different one. It's almost unrecognizable compared
to what it was two decades back. If you look at today's scenario,
this sheer quantity of data that we handle today was unthinkable
two decades back. We also handle with a variety of data and data
formats, which probably didn't even exist the two decades back. And two decades back we were not
talking about the concept of NoSQL databases, but today we work
with a variety of NoSQL databases. And two decades back,
Big Data was unheard of, whereas today it is pretty much stable,
to many enterprises and organisations. One of the major
difference that I see between, you know, before two decades
and now, is the expectations from data engineering. They have
grown a lot. Today, when a data engineer is given a job.
The turn around time is a lot less. Earlier we could take days to
come back with a solution, but today the expectation is that
OK, we come back with a solution within hours. And today, you cannot run a
complete data engineering service without the use of
automation tools. So, you need a lot of automation tools to
make sure that we deliver the data engineering service to the organization. So I started off in this field
almost 25 years ago and there's been a significant
evolution in technology in general, but specifically as
data and data technologies and systems are concerned. So for
example, with cloud computing data infrastructure is now
available as a service. So data engineer, today, needs to do a lot
less from scratch. They can spend more time on doing things
that matter and less time on setting up and managing these
systems. So when I started off in data engineering, it
primarily involved using relational databases and data warehouses. Now there's a lot of
NoSQL databases and other types of data repositories. Another major evolution has been
around Big Data. And data engineers today need to know how to work
with several different Big Data systems and pipelines. And while there are still specializations, today I think
a data engineer needs to know about a greater variety of tools
and data systems, and how they can be effectively used for
solving different types of data problems. So over the past
couple of decades the way that we handle data has changed
very significantly. When I started, it was a very
hierarchical approach. There was somebody at the top, an
Architect and Enterprise Architect, a Data Architect. People who decided how we were
going to store data within an organization. Usually there were
a couple or three supported platforms and we stuck to those.
That was well defined for us. And over the last 20 years,
it's been a very gradual transition from that to a
situation where it's much more often that the way data is
stored comes to us from a developer. A developer wants
it stored in a particular way, a developer has specific requirements. So it's
interesting to have the requirements coming from a
different direction and that changes our role a little bit.
So instead of making sure that we are really great on those two
or three platforms that were previously defined for us, what
we have to do now is we have to take these varying sets of
requirements and needs from developers, and work with those
developers to make sure that the choices they're making are
appropriate for data operations for the long term use of data and storage of data in a
secure and reliable way. So it's more of a conversation in how
things happen and it's much more of a learning expedition for the
data engineer to go out and figure out what's the best way
to do this new thing that the developers need. What's the best
way for me to do this and still have that reliable, highly
available, secure data platform that is what the organization really means? Data engineering
evolved tremendously in the past couple of decades. When I
started 15 years ago as a database administrator, data
engineering was not that hot topic. There were data
engineers, but it's a full-on very hot requirement these days.
So the reason for this is it's basically the evolution of
different kinds of data sources. For example, now we have
Internet of Things related data. All these sensors related
information being fed into these various kinds of data sources. And API feeds from Twitter or
weather APIs, you name it. And everything interconnected. As a
result of the need for a variety of data sources evolved. For
example, you have relational databases for a long time,
for maybe four or five decades. Now you have column stores,
wide column stores, like Cassandra or HBase and
key-value pair databases, Hadoop for Big Data, document stores like MongoDB
or Coachbase. So as a data engineer, you need to be
familiar with all these kinds of data sources, with the
evolution of data sources, and the variety of the data. The
data engineering role evolved significantly over the past
couple of decades. I have only works in data
engineering for two years, so I can only share what I have
learned or observed during the past two years. I think
traditionally data engineering focuses a lot on
database management, ETL pipelines, and data visualization. While in recent years I have seen a lot of more
and more demand for data engineering to understand this
distributed computing and DevOps, and to implement machine
learning models and so on.